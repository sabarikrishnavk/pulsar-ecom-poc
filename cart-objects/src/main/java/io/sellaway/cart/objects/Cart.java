/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.sellaway.cart.objects;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Avro Schema for Order Records */
@org.apache.avro.specific.AvroGenerated
public class Cart extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8022615850259856372L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Cart\",\"namespace\":\"io.sellaway.cart.objects\",\"doc\":\"Avro Schema for Order Records\",\"fields\":[{\"name\":\"orderId\",\"type\":\"string\",\"doc\":\"Order Identifier\",\"default\":\"\"},{\"name\":\"contact\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CartContact\",\"fields\":[{\"name\":\"orderId\",\"type\":\"string\",\"doc\":\"Order Identifier\",\"default\":\"\"},{\"name\":\"firstName\",\"type\":\"string\",\"doc\":\"Customer's first name\"},{\"name\":\"lastName\",\"type\":\"string\",\"doc\":\"Customer's last name\"},{\"name\":\"email\",\"type\":[\"null\",\"string\"],\"doc\":\"Customer Email Addresses\"},{\"name\":\"phone\",\"type\":[\"null\",\"string\"],\"doc\":\"Customer phone\"}]}],\"doc\":\"Customer Details\",\"default\":null},{\"name\":\"summary\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CartSummary\",\"fields\":[{\"name\":\"orderId\",\"type\":\"string\",\"doc\":\"Order Identifier\",\"default\":\"\"},{\"name\":\"discount\",\"type\":\"double\",\"doc\":\"total Discount  \"},{\"name\":\"price\",\"type\":\"double\",\"doc\":\"total sku price \"},{\"name\":\"shipping\",\"type\":\"double\",\"doc\":\"total shipping charge \"},{\"name\":\"quantity\",\"type\":\"double\",\"doc\":\"total quantity purchased \"},{\"name\":\"lines\",\"type\":\"int\",\"doc\":\"total line items purchased \"}]}],\"doc\":\"Cart summary Details\",\"default\":null},{\"name\":\"shipAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CartAddress\",\"fields\":[{\"name\":\"orderId\",\"type\":\"string\",\"doc\":\"Order Identifier\",\"default\":\"\"},{\"name\":\"address\",\"type\":\"string\",\"doc\":\"Address Line 1\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"zipcode\",\"type\":\"string\"},{\"name\":\"addressType\",\"type\":{\"type\":\"enum\",\"name\":\"AddressType\",\"symbols\":[\"shipping\",\"billing\",\"shippingbilling\"]}}]}],\"doc\":\"Order shipping Details\",\"default\":null},{\"name\":\"billAddress\",\"type\":[\"null\",\"CartAddress\"],\"doc\":\"Order billing Details\",\"default\":null},{\"name\":\"lineItems\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LineItem\",\"fields\":[{\"name\":\"orderId\",\"type\":\"string\",\"doc\":\"Order Identifier\",\"default\":\"\"},{\"name\":\"lineNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"lineNumber\",\"default\":null},{\"name\":\"sku\",\"type\":\"string\",\"doc\":\"SKU \",\"default\":\"\"},{\"name\":\"fulfillZipCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Fufilling Zipcode \",\"default\":null},{\"name\":\"shippingMethod\",\"type\":{\"type\":\"enum\",\"name\":\"ShippingMethodType\",\"symbols\":[\"bopis\",\"standard\",\"twoday\",\"nextday\"]}},{\"name\":\"originalPrice\",\"type\":\"double\",\"doc\":\"original Price  \",\"default\":0.0},{\"name\":\"discount\",\"type\":\"double\",\"doc\":\"Discount  \",\"default\":0.0},{\"name\":\"sellingPrice\",\"type\":\"double\",\"doc\":\"sellingPrice = originalPrice - discount \",\"default\":0.0},{\"name\":\"price\",\"type\":\"double\",\"doc\":\"price = sellingPrice * qty \",\"default\":0.0},{\"name\":\"quantity\",\"type\":\"double\",\"doc\":\"quantity purchased \",\"default\":0.0},{\"name\":\"lineItemProperties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Line Item properties :key value \"}]}}],\"doc\":\"Line items\",\"default\":null},{\"name\":\"payments\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CartPayment\",\"fields\":[{\"name\":\"orderId\",\"type\":\"string\",\"doc\":\"Order Identifier\",\"default\":\"\"},{\"name\":\"paymentReference\",\"type\":\"string\",\"doc\":\"Payment reference\"},{\"name\":\"paymentType\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentType\",\"symbols\":[\"Visa\",\"MasterCard\",\"Discover\",\"Amex\",\"Giftcard\"]}},{\"name\":\"walletType\",\"type\":{\"type\":\"enum\",\"name\":\"WalletType\",\"symbols\":[\"ApplePay\",\"Paypal\"]}},{\"name\":\"amount\",\"type\":\"double\",\"doc\":\"amount charged on payment \"},{\"name\":\"paymentProperties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Payment properties properties :key value \"}]}}],\"doc\":\"Payments \",\"default\":null},{\"name\":\"timePlaced\",\"type\":[\"null\",\"string\"],\"doc\":\" Time Order Was Placed\",\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"string\"],\"doc\":\"Last Updated Time\",\"default\":null},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"CartStatusType\",\"symbols\":[\"placed\",\"in_progress\",\"abandoned\"]},\"doc\":\"Cart status\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Cart> ENCODER =
      new BinaryMessageEncoder<Cart>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Cart> DECODER =
      new BinaryMessageDecoder<Cart>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Cart> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Cart> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Cart> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Cart>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Cart to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Cart from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Cart instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Cart fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Order Identifier */
  @Deprecated public java.lang.CharSequence orderId;
  /** Customer Details */
  @Deprecated public io.sellaway.cart.objects.CartContact contact;
  /** Cart summary Details */
  @Deprecated public io.sellaway.cart.objects.CartSummary summary;
  /** Order shipping Details */
  @Deprecated public io.sellaway.cart.objects.CartAddress shipAddress;
  /** Order billing Details */
  @Deprecated public io.sellaway.cart.objects.CartAddress billAddress;
  /** Line items */
  @Deprecated public java.util.List<io.sellaway.cart.objects.LineItem> lineItems;
  /** Payments  */
  @Deprecated public java.util.List<io.sellaway.cart.objects.CartPayment> payments;
  /**  Time Order Was Placed */
  @Deprecated public java.lang.CharSequence timePlaced;
  /** Last Updated Time */
  @Deprecated public java.lang.CharSequence lastUpdated;
  /** Cart status */
  @Deprecated public io.sellaway.cart.objects.CartStatusType status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Cart() {}

  /**
   * All-args constructor.
   * @param orderId Order Identifier
   * @param contact Customer Details
   * @param summary Cart summary Details
   * @param shipAddress Order shipping Details
   * @param billAddress Order billing Details
   * @param lineItems Line items
   * @param payments Payments 
   * @param timePlaced  Time Order Was Placed
   * @param lastUpdated Last Updated Time
   * @param status Cart status
   */
  public Cart(java.lang.CharSequence orderId, io.sellaway.cart.objects.CartContact contact, io.sellaway.cart.objects.CartSummary summary, io.sellaway.cart.objects.CartAddress shipAddress, io.sellaway.cart.objects.CartAddress billAddress, java.util.List<io.sellaway.cart.objects.LineItem> lineItems, java.util.List<io.sellaway.cart.objects.CartPayment> payments, java.lang.CharSequence timePlaced, java.lang.CharSequence lastUpdated, io.sellaway.cart.objects.CartStatusType status) {
    this.orderId = orderId;
    this.contact = contact;
    this.summary = summary;
    this.shipAddress = shipAddress;
    this.billAddress = billAddress;
    this.lineItems = lineItems;
    this.payments = payments;
    this.timePlaced = timePlaced;
    this.lastUpdated = lastUpdated;
    this.status = status;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderId;
    case 1: return contact;
    case 2: return summary;
    case 3: return shipAddress;
    case 4: return billAddress;
    case 5: return lineItems;
    case 6: return payments;
    case 7: return timePlaced;
    case 8: return lastUpdated;
    case 9: return status;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderId = (java.lang.CharSequence)value$; break;
    case 1: contact = (io.sellaway.cart.objects.CartContact)value$; break;
    case 2: summary = (io.sellaway.cart.objects.CartSummary)value$; break;
    case 3: shipAddress = (io.sellaway.cart.objects.CartAddress)value$; break;
    case 4: billAddress = (io.sellaway.cart.objects.CartAddress)value$; break;
    case 5: lineItems = (java.util.List<io.sellaway.cart.objects.LineItem>)value$; break;
    case 6: payments = (java.util.List<io.sellaway.cart.objects.CartPayment>)value$; break;
    case 7: timePlaced = (java.lang.CharSequence)value$; break;
    case 8: lastUpdated = (java.lang.CharSequence)value$; break;
    case 9: status = (io.sellaway.cart.objects.CartStatusType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return Order Identifier
   */
  public java.lang.CharSequence getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * Order Identifier
   * @param value the value to set.
   */
  public void setOrderId(java.lang.CharSequence value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'contact' field.
   * @return Customer Details
   */
  public io.sellaway.cart.objects.CartContact getContact() {
    return contact;
  }


  /**
   * Sets the value of the 'contact' field.
   * Customer Details
   * @param value the value to set.
   */
  public void setContact(io.sellaway.cart.objects.CartContact value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'summary' field.
   * @return Cart summary Details
   */
  public io.sellaway.cart.objects.CartSummary getSummary() {
    return summary;
  }


  /**
   * Sets the value of the 'summary' field.
   * Cart summary Details
   * @param value the value to set.
   */
  public void setSummary(io.sellaway.cart.objects.CartSummary value) {
    this.summary = value;
  }

  /**
   * Gets the value of the 'shipAddress' field.
   * @return Order shipping Details
   */
  public io.sellaway.cart.objects.CartAddress getShipAddress() {
    return shipAddress;
  }


  /**
   * Sets the value of the 'shipAddress' field.
   * Order shipping Details
   * @param value the value to set.
   */
  public void setShipAddress(io.sellaway.cart.objects.CartAddress value) {
    this.shipAddress = value;
  }

  /**
   * Gets the value of the 'billAddress' field.
   * @return Order billing Details
   */
  public io.sellaway.cart.objects.CartAddress getBillAddress() {
    return billAddress;
  }


  /**
   * Sets the value of the 'billAddress' field.
   * Order billing Details
   * @param value the value to set.
   */
  public void setBillAddress(io.sellaway.cart.objects.CartAddress value) {
    this.billAddress = value;
  }

  /**
   * Gets the value of the 'lineItems' field.
   * @return Line items
   */
  public java.util.List<io.sellaway.cart.objects.LineItem> getLineItems() {
    return lineItems;
  }


  /**
   * Sets the value of the 'lineItems' field.
   * Line items
   * @param value the value to set.
   */
  public void setLineItems(java.util.List<io.sellaway.cart.objects.LineItem> value) {
    this.lineItems = value;
  }

  /**
   * Gets the value of the 'payments' field.
   * @return Payments 
   */
  public java.util.List<io.sellaway.cart.objects.CartPayment> getPayments() {
    return payments;
  }


  /**
   * Sets the value of the 'payments' field.
   * Payments 
   * @param value the value to set.
   */
  public void setPayments(java.util.List<io.sellaway.cart.objects.CartPayment> value) {
    this.payments = value;
  }

  /**
   * Gets the value of the 'timePlaced' field.
   * @return  Time Order Was Placed
   */
  public java.lang.CharSequence getTimePlaced() {
    return timePlaced;
  }


  /**
   * Sets the value of the 'timePlaced' field.
   *  Time Order Was Placed
   * @param value the value to set.
   */
  public void setTimePlaced(java.lang.CharSequence value) {
    this.timePlaced = value;
  }

  /**
   * Gets the value of the 'lastUpdated' field.
   * @return Last Updated Time
   */
  public java.lang.CharSequence getLastUpdated() {
    return lastUpdated;
  }


  /**
   * Sets the value of the 'lastUpdated' field.
   * Last Updated Time
   * @param value the value to set.
   */
  public void setLastUpdated(java.lang.CharSequence value) {
    this.lastUpdated = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return Cart status
   */
  public io.sellaway.cart.objects.CartStatusType getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * Cart status
   * @param value the value to set.
   */
  public void setStatus(io.sellaway.cart.objects.CartStatusType value) {
    this.status = value;
  }

  /**
   * Creates a new Cart RecordBuilder.
   * @return A new Cart RecordBuilder
   */
  public static io.sellaway.cart.objects.Cart.Builder newBuilder() {
    return new io.sellaway.cart.objects.Cart.Builder();
  }

  /**
   * Creates a new Cart RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Cart RecordBuilder
   */
  public static io.sellaway.cart.objects.Cart.Builder newBuilder(io.sellaway.cart.objects.Cart.Builder other) {
    if (other == null) {
      return new io.sellaway.cart.objects.Cart.Builder();
    } else {
      return new io.sellaway.cart.objects.Cart.Builder(other);
    }
  }

  /**
   * Creates a new Cart RecordBuilder by copying an existing Cart instance.
   * @param other The existing instance to copy.
   * @return A new Cart RecordBuilder
   */
  public static io.sellaway.cart.objects.Cart.Builder newBuilder(io.sellaway.cart.objects.Cart other) {
    if (other == null) {
      return new io.sellaway.cart.objects.Cart.Builder();
    } else {
      return new io.sellaway.cart.objects.Cart.Builder(other);
    }
  }

  /**
   * RecordBuilder for Cart instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Cart>
    implements org.apache.avro.data.RecordBuilder<Cart> {

    /** Order Identifier */
    private java.lang.CharSequence orderId;
    /** Customer Details */
    private io.sellaway.cart.objects.CartContact contact;
    private io.sellaway.cart.objects.CartContact.Builder contactBuilder;
    /** Cart summary Details */
    private io.sellaway.cart.objects.CartSummary summary;
    private io.sellaway.cart.objects.CartSummary.Builder summaryBuilder;
    /** Order shipping Details */
    private io.sellaway.cart.objects.CartAddress shipAddress;
    private io.sellaway.cart.objects.CartAddress.Builder shipAddressBuilder;
    /** Order billing Details */
    private io.sellaway.cart.objects.CartAddress billAddress;
    private io.sellaway.cart.objects.CartAddress.Builder billAddressBuilder;
    /** Line items */
    private java.util.List<io.sellaway.cart.objects.LineItem> lineItems;
    /** Payments  */
    private java.util.List<io.sellaway.cart.objects.CartPayment> payments;
    /**  Time Order Was Placed */
    private java.lang.CharSequence timePlaced;
    /** Last Updated Time */
    private java.lang.CharSequence lastUpdated;
    /** Cart status */
    private io.sellaway.cart.objects.CartStatusType status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.sellaway.cart.objects.Cart.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.contact)) {
        this.contact = data().deepCopy(fields()[1].schema(), other.contact);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasContactBuilder()) {
        this.contactBuilder = io.sellaway.cart.objects.CartContact.newBuilder(other.getContactBuilder());
      }
      if (isValidValue(fields()[2], other.summary)) {
        this.summary = data().deepCopy(fields()[2].schema(), other.summary);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasSummaryBuilder()) {
        this.summaryBuilder = io.sellaway.cart.objects.CartSummary.newBuilder(other.getSummaryBuilder());
      }
      if (isValidValue(fields()[3], other.shipAddress)) {
        this.shipAddress = data().deepCopy(fields()[3].schema(), other.shipAddress);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasShipAddressBuilder()) {
        this.shipAddressBuilder = io.sellaway.cart.objects.CartAddress.newBuilder(other.getShipAddressBuilder());
      }
      if (isValidValue(fields()[4], other.billAddress)) {
        this.billAddress = data().deepCopy(fields()[4].schema(), other.billAddress);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasBillAddressBuilder()) {
        this.billAddressBuilder = io.sellaway.cart.objects.CartAddress.newBuilder(other.getBillAddressBuilder());
      }
      if (isValidValue(fields()[5], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[5].schema(), other.lineItems);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.payments)) {
        this.payments = data().deepCopy(fields()[6].schema(), other.payments);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.timePlaced)) {
        this.timePlaced = data().deepCopy(fields()[7].schema(), other.timePlaced);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[8].schema(), other.lastUpdated);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing Cart instance
     * @param other The existing instance to copy.
     */
    private Builder(io.sellaway.cart.objects.Cart other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contact)) {
        this.contact = data().deepCopy(fields()[1].schema(), other.contact);
        fieldSetFlags()[1] = true;
      }
      this.contactBuilder = null;
      if (isValidValue(fields()[2], other.summary)) {
        this.summary = data().deepCopy(fields()[2].schema(), other.summary);
        fieldSetFlags()[2] = true;
      }
      this.summaryBuilder = null;
      if (isValidValue(fields()[3], other.shipAddress)) {
        this.shipAddress = data().deepCopy(fields()[3].schema(), other.shipAddress);
        fieldSetFlags()[3] = true;
      }
      this.shipAddressBuilder = null;
      if (isValidValue(fields()[4], other.billAddress)) {
        this.billAddress = data().deepCopy(fields()[4].schema(), other.billAddress);
        fieldSetFlags()[4] = true;
      }
      this.billAddressBuilder = null;
      if (isValidValue(fields()[5], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[5].schema(), other.lineItems);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.payments)) {
        this.payments = data().deepCopy(fields()[6].schema(), other.payments);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.timePlaced)) {
        this.timePlaced = data().deepCopy(fields()[7].schema(), other.timePlaced);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[8].schema(), other.lastUpdated);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'orderId' field.
      * Order Identifier
      * @return The value.
      */
    public java.lang.CharSequence getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * Order Identifier
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setOrderId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.orderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * Order Identifier
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderId' field.
      * Order Identifier
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'contact' field.
      * Customer Details
      * @return The value.
      */
    public io.sellaway.cart.objects.CartContact getContact() {
      return contact;
    }


    /**
      * Sets the value of the 'contact' field.
      * Customer Details
      * @param value The value of 'contact'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setContact(io.sellaway.cart.objects.CartContact value) {
      validate(fields()[1], value);
      this.contactBuilder = null;
      this.contact = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'contact' field has been set.
      * Customer Details
      * @return True if the 'contact' field has been set, false otherwise.
      */
    public boolean hasContact() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'contact' field and creates one if it doesn't exist yet.
     * Customer Details
     * @return This builder.
     */
    public io.sellaway.cart.objects.CartContact.Builder getContactBuilder() {
      if (contactBuilder == null) {
        if (hasContact()) {
          setContactBuilder(io.sellaway.cart.objects.CartContact.newBuilder(contact));
        } else {
          setContactBuilder(io.sellaway.cart.objects.CartContact.newBuilder());
        }
      }
      return contactBuilder;
    }

    /**
     * Sets the Builder instance for the 'contact' field
     * Customer Details
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.sellaway.cart.objects.Cart.Builder setContactBuilder(io.sellaway.cart.objects.CartContact.Builder value) {
      clearContact();
      contactBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'contact' field has an active Builder instance
     * Customer Details
     * @return True if the 'contact' field has an active Builder instance
     */
    public boolean hasContactBuilder() {
      return contactBuilder != null;
    }

    /**
      * Clears the value of the 'contact' field.
      * Customer Details
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearContact() {
      contact = null;
      contactBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'summary' field.
      * Cart summary Details
      * @return The value.
      */
    public io.sellaway.cart.objects.CartSummary getSummary() {
      return summary;
    }


    /**
      * Sets the value of the 'summary' field.
      * Cart summary Details
      * @param value The value of 'summary'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setSummary(io.sellaway.cart.objects.CartSummary value) {
      validate(fields()[2], value);
      this.summaryBuilder = null;
      this.summary = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'summary' field has been set.
      * Cart summary Details
      * @return True if the 'summary' field has been set, false otherwise.
      */
    public boolean hasSummary() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'summary' field and creates one if it doesn't exist yet.
     * Cart summary Details
     * @return This builder.
     */
    public io.sellaway.cart.objects.CartSummary.Builder getSummaryBuilder() {
      if (summaryBuilder == null) {
        if (hasSummary()) {
          setSummaryBuilder(io.sellaway.cart.objects.CartSummary.newBuilder(summary));
        } else {
          setSummaryBuilder(io.sellaway.cart.objects.CartSummary.newBuilder());
        }
      }
      return summaryBuilder;
    }

    /**
     * Sets the Builder instance for the 'summary' field
     * Cart summary Details
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.sellaway.cart.objects.Cart.Builder setSummaryBuilder(io.sellaway.cart.objects.CartSummary.Builder value) {
      clearSummary();
      summaryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'summary' field has an active Builder instance
     * Cart summary Details
     * @return True if the 'summary' field has an active Builder instance
     */
    public boolean hasSummaryBuilder() {
      return summaryBuilder != null;
    }

    /**
      * Clears the value of the 'summary' field.
      * Cart summary Details
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearSummary() {
      summary = null;
      summaryBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipAddress' field.
      * Order shipping Details
      * @return The value.
      */
    public io.sellaway.cart.objects.CartAddress getShipAddress() {
      return shipAddress;
    }


    /**
      * Sets the value of the 'shipAddress' field.
      * Order shipping Details
      * @param value The value of 'shipAddress'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setShipAddress(io.sellaway.cart.objects.CartAddress value) {
      validate(fields()[3], value);
      this.shipAddressBuilder = null;
      this.shipAddress = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'shipAddress' field has been set.
      * Order shipping Details
      * @return True if the 'shipAddress' field has been set, false otherwise.
      */
    public boolean hasShipAddress() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'shipAddress' field and creates one if it doesn't exist yet.
     * Order shipping Details
     * @return This builder.
     */
    public io.sellaway.cart.objects.CartAddress.Builder getShipAddressBuilder() {
      if (shipAddressBuilder == null) {
        if (hasShipAddress()) {
          setShipAddressBuilder(io.sellaway.cart.objects.CartAddress.newBuilder(shipAddress));
        } else {
          setShipAddressBuilder(io.sellaway.cart.objects.CartAddress.newBuilder());
        }
      }
      return shipAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'shipAddress' field
     * Order shipping Details
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.sellaway.cart.objects.Cart.Builder setShipAddressBuilder(io.sellaway.cart.objects.CartAddress.Builder value) {
      clearShipAddress();
      shipAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'shipAddress' field has an active Builder instance
     * Order shipping Details
     * @return True if the 'shipAddress' field has an active Builder instance
     */
    public boolean hasShipAddressBuilder() {
      return shipAddressBuilder != null;
    }

    /**
      * Clears the value of the 'shipAddress' field.
      * Order shipping Details
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearShipAddress() {
      shipAddress = null;
      shipAddressBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'billAddress' field.
      * Order billing Details
      * @return The value.
      */
    public io.sellaway.cart.objects.CartAddress getBillAddress() {
      return billAddress;
    }


    /**
      * Sets the value of the 'billAddress' field.
      * Order billing Details
      * @param value The value of 'billAddress'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setBillAddress(io.sellaway.cart.objects.CartAddress value) {
      validate(fields()[4], value);
      this.billAddressBuilder = null;
      this.billAddress = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'billAddress' field has been set.
      * Order billing Details
      * @return True if the 'billAddress' field has been set, false otherwise.
      */
    public boolean hasBillAddress() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'billAddress' field and creates one if it doesn't exist yet.
     * Order billing Details
     * @return This builder.
     */
    public io.sellaway.cart.objects.CartAddress.Builder getBillAddressBuilder() {
      if (billAddressBuilder == null) {
        if (hasBillAddress()) {
          setBillAddressBuilder(io.sellaway.cart.objects.CartAddress.newBuilder(billAddress));
        } else {
          setBillAddressBuilder(io.sellaway.cart.objects.CartAddress.newBuilder());
        }
      }
      return billAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'billAddress' field
     * Order billing Details
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.sellaway.cart.objects.Cart.Builder setBillAddressBuilder(io.sellaway.cart.objects.CartAddress.Builder value) {
      clearBillAddress();
      billAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'billAddress' field has an active Builder instance
     * Order billing Details
     * @return True if the 'billAddress' field has an active Builder instance
     */
    public boolean hasBillAddressBuilder() {
      return billAddressBuilder != null;
    }

    /**
      * Clears the value of the 'billAddress' field.
      * Order billing Details
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearBillAddress() {
      billAddress = null;
      billAddressBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineItems' field.
      * Line items
      * @return The value.
      */
    public java.util.List<io.sellaway.cart.objects.LineItem> getLineItems() {
      return lineItems;
    }


    /**
      * Sets the value of the 'lineItems' field.
      * Line items
      * @param value The value of 'lineItems'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setLineItems(java.util.List<io.sellaway.cart.objects.LineItem> value) {
      validate(fields()[5], value);
      this.lineItems = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'lineItems' field has been set.
      * Line items
      * @return True if the 'lineItems' field has been set, false otherwise.
      */
    public boolean hasLineItems() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'lineItems' field.
      * Line items
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearLineItems() {
      lineItems = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'payments' field.
      * Payments 
      * @return The value.
      */
    public java.util.List<io.sellaway.cart.objects.CartPayment> getPayments() {
      return payments;
    }


    /**
      * Sets the value of the 'payments' field.
      * Payments 
      * @param value The value of 'payments'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setPayments(java.util.List<io.sellaway.cart.objects.CartPayment> value) {
      validate(fields()[6], value);
      this.payments = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'payments' field has been set.
      * Payments 
      * @return True if the 'payments' field has been set, false otherwise.
      */
    public boolean hasPayments() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'payments' field.
      * Payments 
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearPayments() {
      payments = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'timePlaced' field.
      *  Time Order Was Placed
      * @return The value.
      */
    public java.lang.CharSequence getTimePlaced() {
      return timePlaced;
    }


    /**
      * Sets the value of the 'timePlaced' field.
      *  Time Order Was Placed
      * @param value The value of 'timePlaced'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setTimePlaced(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.timePlaced = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'timePlaced' field has been set.
      *  Time Order Was Placed
      * @return True if the 'timePlaced' field has been set, false otherwise.
      */
    public boolean hasTimePlaced() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'timePlaced' field.
      *  Time Order Was Placed
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearTimePlaced() {
      timePlaced = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdated' field.
      * Last Updated Time
      * @return The value.
      */
    public java.lang.CharSequence getLastUpdated() {
      return lastUpdated;
    }


    /**
      * Sets the value of the 'lastUpdated' field.
      * Last Updated Time
      * @param value The value of 'lastUpdated'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setLastUpdated(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.lastUpdated = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdated' field has been set.
      * Last Updated Time
      * @return True if the 'lastUpdated' field has been set, false otherwise.
      */
    public boolean hasLastUpdated() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'lastUpdated' field.
      * Last Updated Time
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearLastUpdated() {
      lastUpdated = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * Cart status
      * @return The value.
      */
    public io.sellaway.cart.objects.CartStatusType getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * Cart status
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder setStatus(io.sellaway.cart.objects.CartStatusType value) {
      validate(fields()[9], value);
      this.status = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * Cart status
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'status' field.
      * Cart status
      * @return This builder.
      */
    public io.sellaway.cart.objects.Cart.Builder clearStatus() {
      status = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Cart build() {
      try {
        Cart record = new Cart();
        record.orderId = fieldSetFlags()[0] ? this.orderId : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (contactBuilder != null) {
          try {
            record.contact = this.contactBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("contact"));
            throw e;
          }
        } else {
          record.contact = fieldSetFlags()[1] ? this.contact : (io.sellaway.cart.objects.CartContact) defaultValue(fields()[1]);
        }
        if (summaryBuilder != null) {
          try {
            record.summary = this.summaryBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("summary"));
            throw e;
          }
        } else {
          record.summary = fieldSetFlags()[2] ? this.summary : (io.sellaway.cart.objects.CartSummary) defaultValue(fields()[2]);
        }
        if (shipAddressBuilder != null) {
          try {
            record.shipAddress = this.shipAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("shipAddress"));
            throw e;
          }
        } else {
          record.shipAddress = fieldSetFlags()[3] ? this.shipAddress : (io.sellaway.cart.objects.CartAddress) defaultValue(fields()[3]);
        }
        if (billAddressBuilder != null) {
          try {
            record.billAddress = this.billAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("billAddress"));
            throw e;
          }
        } else {
          record.billAddress = fieldSetFlags()[4] ? this.billAddress : (io.sellaway.cart.objects.CartAddress) defaultValue(fields()[4]);
        }
        record.lineItems = fieldSetFlags()[5] ? this.lineItems : (java.util.List<io.sellaway.cart.objects.LineItem>) defaultValue(fields()[5]);
        record.payments = fieldSetFlags()[6] ? this.payments : (java.util.List<io.sellaway.cart.objects.CartPayment>) defaultValue(fields()[6]);
        record.timePlaced = fieldSetFlags()[7] ? this.timePlaced : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.lastUpdated = fieldSetFlags()[8] ? this.lastUpdated : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.status = fieldSetFlags()[9] ? this.status : (io.sellaway.cart.objects.CartStatusType) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Cart>
    WRITER$ = (org.apache.avro.io.DatumWriter<Cart>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Cart>
    READER$ = (org.apache.avro.io.DatumReader<Cart>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.orderId);

    if (this.contact == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.contact.customEncode(out);
    }

    if (this.summary == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.summary.customEncode(out);
    }

    if (this.shipAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.shipAddress.customEncode(out);
    }

    if (this.billAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.billAddress.customEncode(out);
    }

    if (this.lineItems == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.lineItems.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (io.sellaway.cart.objects.LineItem e0: this.lineItems) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.payments == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.payments.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (io.sellaway.cart.objects.CartPayment e1: this.payments) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.timePlaced == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.timePlaced);
    }

    if (this.lastUpdated == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.lastUpdated);
    }

    out.writeEnum(this.status.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.orderId = in.readString(this.orderId instanceof Utf8 ? (Utf8)this.orderId : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.contact = null;
      } else {
        if (this.contact == null) {
          this.contact = new io.sellaway.cart.objects.CartContact();
        }
        this.contact.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.summary = null;
      } else {
        if (this.summary == null) {
          this.summary = new io.sellaway.cart.objects.CartSummary();
        }
        this.summary.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.shipAddress = null;
      } else {
        if (this.shipAddress == null) {
          this.shipAddress = new io.sellaway.cart.objects.CartAddress();
        }
        this.shipAddress.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.billAddress = null;
      } else {
        if (this.billAddress == null) {
          this.billAddress = new io.sellaway.cart.objects.CartAddress();
        }
        this.billAddress.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lineItems = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<io.sellaway.cart.objects.LineItem> a0 = this.lineItems;
        if (a0 == null) {
          a0 = new SpecificData.Array<io.sellaway.cart.objects.LineItem>((int)size0, SCHEMA$.getField("lineItems").schema().getTypes().get(1));
          this.lineItems = a0;
        } else a0.clear();
        SpecificData.Array<io.sellaway.cart.objects.LineItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.sellaway.cart.objects.LineItem>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            io.sellaway.cart.objects.LineItem e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new io.sellaway.cart.objects.LineItem();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.payments = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<io.sellaway.cart.objects.CartPayment> a1 = this.payments;
        if (a1 == null) {
          a1 = new SpecificData.Array<io.sellaway.cart.objects.CartPayment>((int)size1, SCHEMA$.getField("payments").schema().getTypes().get(1));
          this.payments = a1;
        } else a1.clear();
        SpecificData.Array<io.sellaway.cart.objects.CartPayment> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<io.sellaway.cart.objects.CartPayment>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            io.sellaway.cart.objects.CartPayment e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new io.sellaway.cart.objects.CartPayment();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.timePlaced = null;
      } else {
        this.timePlaced = in.readString(this.timePlaced instanceof Utf8 ? (Utf8)this.timePlaced : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastUpdated = null;
      } else {
        this.lastUpdated = in.readString(this.lastUpdated instanceof Utf8 ? (Utf8)this.lastUpdated : null);
      }

      this.status = io.sellaway.cart.objects.CartStatusType.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.orderId = in.readString(this.orderId instanceof Utf8 ? (Utf8)this.orderId : null);
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.contact = null;
          } else {
            if (this.contact == null) {
              this.contact = new io.sellaway.cart.objects.CartContact();
            }
            this.contact.customDecode(in);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.summary = null;
          } else {
            if (this.summary == null) {
              this.summary = new io.sellaway.cart.objects.CartSummary();
            }
            this.summary.customDecode(in);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.shipAddress = null;
          } else {
            if (this.shipAddress == null) {
              this.shipAddress = new io.sellaway.cart.objects.CartAddress();
            }
            this.shipAddress.customDecode(in);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.billAddress = null;
          } else {
            if (this.billAddress == null) {
              this.billAddress = new io.sellaway.cart.objects.CartAddress();
            }
            this.billAddress.customDecode(in);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lineItems = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<io.sellaway.cart.objects.LineItem> a0 = this.lineItems;
            if (a0 == null) {
              a0 = new SpecificData.Array<io.sellaway.cart.objects.LineItem>((int)size0, SCHEMA$.getField("lineItems").schema().getTypes().get(1));
              this.lineItems = a0;
            } else a0.clear();
            SpecificData.Array<io.sellaway.cart.objects.LineItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.sellaway.cart.objects.LineItem>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                io.sellaway.cart.objects.LineItem e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new io.sellaway.cart.objects.LineItem();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.payments = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<io.sellaway.cart.objects.CartPayment> a1 = this.payments;
            if (a1 == null) {
              a1 = new SpecificData.Array<io.sellaway.cart.objects.CartPayment>((int)size1, SCHEMA$.getField("payments").schema().getTypes().get(1));
              this.payments = a1;
            } else a1.clear();
            SpecificData.Array<io.sellaway.cart.objects.CartPayment> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<io.sellaway.cart.objects.CartPayment>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                io.sellaway.cart.objects.CartPayment e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new io.sellaway.cart.objects.CartPayment();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.timePlaced = null;
          } else {
            this.timePlaced = in.readString(this.timePlaced instanceof Utf8 ? (Utf8)this.timePlaced : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastUpdated = null;
          } else {
            this.lastUpdated = in.readString(this.lastUpdated instanceof Utf8 ? (Utf8)this.lastUpdated : null);
          }
          break;

        case 9:
          this.status = io.sellaway.cart.objects.CartStatusType.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










